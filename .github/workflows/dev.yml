name: Dev Deploy

on:
  push:
    branches: [ "dev" ]

  workflow_dispatch:

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Environment file Setting
        env: 
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          echo "JWT_SECRET=$JWT_SECRET" >> .env
      
      - name: Environment Variable Setting
        run: |
          mysql_host=`aws ssm get-parameter --name "/autosql/dev/database/address" | jq ".Parameter.Value" | tr -d '"'`
          mysql_password=`aws ssm get-parameter --name "/autosql/dev/database/password" --with-decryption | jq ".Parameter.Value" | tr -d '"'`
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          IMAGE_TAG: "latest"
        run: |
          ECR_REPOSITORY=`aws ssm get-parameter --name "/autosql/dev/backend/repository" | jq ".Parameter.Value" | tr -d '"'`
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG --build-arg mysql_host=$mysql_host --build-arg mysql_password=$mysql_password .
          docker push $ECR_REPOSITORY:$IMAGE_TAG
